version: 2.1
orbs:
  php: circleci/php@1
jobs:
  test:
    docker:
      - image: cimg/php:8.2-browsers
      - image: cimg/mysql:8.0
        environment:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: testing
          MYSQL_USER: ci-user
          MYSQL_PASSWORD: password
    steps:
      - checkout
      - setup_remote_docker
      - php/install-packages
      - run:
          name: Stripe CLI
          command: docker run --rm -it stripe/stripe-cli listen --forward-to localhost:8000/stripe/webhook --api-key ${STRIPE_SECRET}
          background: true
      - run:
          name: Remove .env.testing and .env.dusk.testing
          command: rm -f .env.testing .env.dusk.testing
      - run:
          name: Copy .env.ci to .env
          command: cp .env.ci .env
      - run:
          name: Add STRIPE_KEY to .env
          command: echo "STRIPE_KEY=${STRIPE_KEY}" >> .env
      - run:
          name: Add STRIPE_SECRET to .env
          command: echo "STRIPE_SECRET=${STRIPE_SECRET}" >> .env
      - run:
          name: Add STRIPE_WEBHOOK_SECRET to .env
          command: echo "STRIPE_WEBHOOK_SECRET=${STRIPE_WEBHOOK_SECRET}" >> .env
      - run:
          name: Add VITE_STRIPE_KEY to .env
          command: echo "VITE_STRIPE_KEY=${STRIPE_KEY}" >> .env
      - run:
          name: Install node modules
          command: npm ci
      - run:
          name: Build assets
          command: npm run build
      - run:
          name: Wait for MySQL
          command: |
            for i in `seq 1 10`;
            do
              nc -z 127.0.0.1 3306 && echo Success && exit 0
              echo -n .
              sleep 1
            done
            echo Failed waiting for MySQL && exit 1
      - run:
          name: Generate key
          command: php artisan key:generate
      - run:
          name: Migration
          command: php artisan migrate
      - run:
          name: Run tests
          command: php artisan test
      - run:
          name: Update chrome driver
          command: php artisan dusk:chrome-driver --detect
      - run:
          name: Start chrome driver
          command: ./vendor/laravel/dusk/bin/chromedriver-linux
          background: true
      - run:
          name: Run Laravel server
          command: php artisan serve
          background: true
      - run:
          name: Run dusk tests
          command: php artisan dusk
  deploy:
    docker:
      - image: arvindr226/alpine-ssh
    steps:
      - run: ssh $SSH_USER@$SSH_HOST "cd /var/www/app && ./terraform/deploy.sh"
workflows:
  build-and-test:
    jobs:
      - test
      - deploy:
          requires:
            - test
          filters:
            branches:
              only:
                - main
